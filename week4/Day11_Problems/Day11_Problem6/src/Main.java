// 백준 4673: 셀프 넘버
// -------------------------------------------------------------------------
// * 셀프 넘버: 생성자가 없는 숫자이다. 예를 들어 33은 39의 생성자이고,
//            39는 51의 생성자이다. 이처럼 생성자가 없는 숫자를 셀프 넘버라고 한다.
// * n에 대해 d(n)을 계산하는 함수를 구현해야 함. d(n)은 n과 n의 각 자리수를 더한 값을 반환함
// * 1부터 10,000까지의 숫자에 대해 d(n)을 계산해 생성자 집합을 만들어야 함
// * 1부터 10,000까지의 숫자 중 생성자 집합에 포함되지 않는 숫자를 셀프 넘버로 출력함
// -------------------------------------------------------------------------

public class Main {
    // d(n) 함수 구현
    public static int d(int n) {
        int sum = n;
        while (n > 0) {
            sum += n % 10; // 각 자리수 더하기
            n /= 10; // 다음 자리수로 이동
        }
        return sum;
    }

    public static void main(String[] args) {
        // 생성자 집합을 저장할 배열 생성
        boolean[] generator = new boolean[10001]; // 1부터 10000까지 사용

        // 1부터 10000까지 숫자에 대해 d(n) 계산
        for (int i = 1; i <= 10000; i++) {
            int dn = d(i);
            if (dn <= 10000) {
                generator[dn] = true; // d(n)이 10000 이하일 경우 생성자 집합에 포함시킴
            }
        }

        // 생성자 집합에 포함되지 않는 숫자 (셀프 넘버) 출력
        for (int i = 1; i <= 10000; i++) {
            if (!generator[i]) {
                System.out.println(i); // 셀프 넘버 출력
            }
        }
    }
}